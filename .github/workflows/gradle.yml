# WARNING: Do not edit this file directly. Instead, go to:
#
# https://github.com/micronaut-projects/micronaut-project-template/tree/master/.github/workflows
#
# and edit them there. Note that it will be sync'ed to all the Micronaut repos
name: Java CI
on:
  push:
    branches:
      - master
      - '[1-9]+.[0-9]+.x'
  pull_request:
    branches:
      - master
      - '[1-9]+.[0-9]+.x'
jobs:
  start-runner:
    name: Start self-hosted OracleCloud runners
    uses: ./.github/workflows/startRunners.yml
    with:
      runners_count: '3'
  build:
    if: github.repository != 'micronaut-projects/micronaut-project-template'
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}
    strategy:
      matrix:
        java: ['8', '11', '17']
        k8s: ['1.18', '1.19', '1.20', '1.21']
    steps:
      - uses: AutoModality/action-clean@1.1.0
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Optional setup step
        env:
          K8S_VERSION: ${{ matrix.k8s }}
          JAVA_VERSION: ${{ matrix.java }}
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USERNAME }}
          GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
        run: |
          [ -f ./setup.sh ] && ./setup.sh || true
      - name: Build with Gradle
        run: |
          # Awful hack for kapt and JDK 16. See https://youtrack.jetbrains.com/issue/KT-45545
          if [ ${{ matrix.java }} == 16 ]; then export GRADLE_OPTS="-Dorg.gradle.jvmargs=--illegal-access=permit"; fi
          ./gradlew dependencyUpdates check --no-daemon --parallel --continue
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USERNAME }}
          GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
          PREDICTIVE_TEST_SELECTION: "${{ github.event_name == 'pull_request' && 'true' || 'false' }}"
      - name: Optional tear down step
        env:
          K8S_VERSION: ${{ matrix.k8s }}
          JAVA_VERSION: ${{ matrix.java }}
        run: |
          [ -f ./teardown.sh ] && ./teardown.sh || true
      - name: Publish Test Report
        if: always()
        uses: mikepenz/action-junit-report@v3.0.3
        with:
          check_name: Java CI / Test Report (${{ matrix.java }})
          report_paths: '**/build/test-results/test/TEST-*.xml'
          check_retries: 'true'
      - name: Publish to Sonatype Snapshots
        if: success() && github.event_name == 'push' && matrix.java == '8' && matrix.k8s == '1.19'
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USERNAME }}
          GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
        run: ./gradlew publishToSonatype docs --no-daemon
      - name: Determine docs target repository
        uses: haya14busa/action-cond@v1
        id: docs_target
        with:
          cond: ${{ github.repository == 'micronaut-projects/micronaut-core' }}
          if_true: "micronaut-projects/micronaut-docs"
          if_false: ${{ github.repository }}
      - name: Publish to Github Pages
        if: success() && github.event_name == 'push' && matrix.java == '8' && matrix.k8s == '1.19'
        uses: micronaut-projects/github-pages-deploy-action@master
        env:
          TARGET_REPOSITORY: ${{ steps.docs_target.outputs.value }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: build/docs
  stop-runner:
    name: Stop self-hosted OracleCloud runners
    needs:
      - start-runner
      - build
    uses: ./.github/workflows/stopRunners.yml
    with: ${{ needs.start-runner.outputs.label }}
