# WARNING: Do not edit this file directly. Instead, go to:
#
# https://github.com/micronaut-projects/micronaut-project-template/tree/master/.github/workflows
#
# and edit them there. Note that it will be sync'ed to all the Micronaut repos
name: Java CI
on:
  push:
    branches:
      - master
      - '[1-9]+.[0-9]+.x'
  pull_request:
    branches:
      - master
      - '[1-9]+.[0-9]+.x'
jobs:
  start-runner:
    name: Start self-hosted OracleCloud runners
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-runner.outputs.label }}
    steps:
      - name: Install OCI CLI
        uses: micronaut-projects/github-actions/configure-oracle-cloud-cli@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          oci-user-ocid: ${{ secrets.OCI_USER }}
          oci-region: ${{ secrets.OCI_REGION }}
          oci-tenancy-ocid: ${{ secrets.OCI_TENANCY }}
          oci-private-key: ${{ secrets.OCI_KEY_FILE }}
          oci-private-key-passphrase: ${{ secrets.OCI_PASSPHRASE }}
          oci-private-key-fingerprint: ${{ secrets.OCI_FINGERPRINT }}
      - name: Start runners
        uses: micronaut-projects/github-actions/start-oracle-cloud-runners@master
        id: start-runner
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          oci-compartment-ocid: ${{ secrets.OCI_COMPARTMENT }}
          oci-subnet-ocid: ${{ secrets.OCI_SUBNET }}
          oci-av-domain: ${{ secrets.OCI_AV_DOMAIN }}
          oci-image-ocid: ${{ secrets.OCI_RUNNER_IMAGE }}
          runners-count: '3'
  build:
    if: github.repository != 'micronaut-projects/micronaut-project-template'
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}
    strategy:
      matrix:
        java: ['17']
        k8s: ['1.18', '1.19', '1.20', '1.21']
    steps:
      - uses: actions/checkout@v3
      - name: Pre-build
        uses: ./.github/actions/gradle-pre-build
        id: pre-build
        with:
          java: ${{ matrix.java }}
          gradle-enterprise-access-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          gradle-enterprise-cache-username: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USERNAME }}
          gradle-enterprise-cache-password: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
          setup-command-env-variables:
#             Add additional variables as needed, for example:
#             export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
#             export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
#             export AWS_REGION="${{ secrets.AWS_REGION }}"
            export K8S_VERSION=${{ matrix.k8s }}
      - name: Build
        uses: ./.github/actions/gradle-build
        id: build
        with:
          java: ${{ matrix.java }}
          gh-token-public-repos-readonly: ${{ secrets.GH_TOKEN_PUBLIC_REPOS_READONLY }}
          gh-username: ${{ secrets.GH_USERNAME }}
          gradle-enterprise-access-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          gradle-enterprise-cache-username: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USERNAME }}
          gradle-enterprise-cache-password: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
      - name: Post-build
        uses: ./.github/actions/gradle-post-build
        id: post-build
        with:
          java: ${{ matrix.java }}
          gh-token-public-repos-readonly: ${{ secrets.GH_TOKEN_PUBLIC_REPOS_READONLY }}
          gh-username: ${{ secrets.GH_USERNAME }}
          sonatype-username: ${{ secrets.SONATYPE_USERNAME }}
          sonatype-password: ${{ secrets.SONATYPE_PASSWORD }}
          gradle-enterprise-access-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          gradle-enterprise-cache-username: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USERNAME }}
          gradle-enterprise-cache-password: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
          gh-token: ${{ secrets.GH_TOKEN }}
          teardown-command-env-variables:
            #             Add additional variables as needed, for example:
            #             export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
            #             export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
            #             export AWS_REGION="${{ secrets.AWS_REGION }}"
            export K8S_VERSION=${{ matrix.k8s }}
  stop-runner:
    name: Stop self-hosted OracleCloud runners
    needs:
      - start-runner
      - build
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Install OCI CLI
        uses: micronaut-projects/github-actions/configure-oracle-cloud-cli@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          oci-user-ocid: ${{ secrets.OCI_USER }}
          oci-region: ${{ secrets.OCI_REGION }}
          oci-tenancy-ocid: ${{ secrets.OCI_TENANCY }}
          oci-private-key: ${{ secrets.OCI_KEY_FILE }}
          oci-private-key-passphrase: ${{ secrets.OCI_PASSPHRASE }}
          oci-private-key-fingerprint: ${{ secrets.OCI_FINGERPRINT }}
      - name: Stop runners
        uses: micronaut-projects/github-actions/stop-oracle-cloud-runners@master
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          oci-compartment-ocid: ${{ secrets.OCI_COMPARTMENT }}
          oci-runner-label-tag-value: ${{ needs.start-runner.outputs.label }}
